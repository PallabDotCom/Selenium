//Page Object Pattern : Easy to maintain, Easyreadability of scripts, Reduce or eliminate duplicacy, re-usability of code, Reliability
//Page factory annotation FinfBy is more simplified.

//Example of Page Object: 
// Lets say you have 2 package TestCases & objectrepository
//Under objectrepository create 2 class Flights & LoginPage. For Login Page applying Page factory annotation and applying normal Page Object Pattern in Flights class.
//Under TestCases create class LoginApplication

public class LoginApplication {

	public static void main(String[] args) {

		System.setProperty("webdriver.chrome.driver", "C:\\Users\\debnpal\\OneDrive - Manulife\\Documents\\Documents\\chromedriver.exe");
		WebDriver driver=new ChromeDriver();
		driver.get("https://rahulshettyacademy.com/dropdownsPractise/");
		LoginPage lp= new LoginPage(driver);
		lp.FamilyAndFriends().click();
		lp.Student().click();
		lp.Flightsclick().click();
		Flights FL = new Flights(driver);
		FL.windowSwitch();
		FL.RoundTrip().click();
	}
}

public class LoginPage {
	
	WebDriver driver1;

	public LoginPage(WebDriver driver) 
	{
	this.driver1=driver;
	PageFactory.initElements(driver1, this);

	}
	
	@FindBy(id="ctl00_mainContent_chk_friendsandfamily")
	WebElement FamilyAndFriends;
	
	@FindBy(id="ctl00_mainContent_chk_StudentDiscount")
	WebElement Student;
	
	@FindBy(className="group-heading")
	WebElement Flightsclick;
	
	
	public WebElement FamilyAndFriends()
	{
		return FamilyAndFriends;
	}
	
	public WebElement Student()
	{
		return Student;
	}
	
	public WebElement Flightsclick()
	{
		return Flightsclick;
	}
	

}


public class Flights {

		WebDriver driver2;

		public Flights(WebDriver driver) 
		{
		this.driver2=driver;

		}
		
		By RoundTrip= By.id("ctl00_mainContent_rbtnl_Trip_1");
		
		public WebElement RoundTrip()
		{
			return driver2.findElement(RoundTrip);
		}
		
		public void windowSwitch()
		{
		Set<String> windows = driver2.getWindowHandles(); 
		Iterator<String>it = windows.iterator();
		String parentId = it.next();
		String childId = it.next();
		driver2.switchTo().window(childId);
		}

	}




